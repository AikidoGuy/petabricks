/***************************************************************************
 *   Copyright (C) 2008 by Jason Ansel                                     *
 *   jansel@csail.mit.edu                                                  *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 3 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   You should have received a copy of the GNU General Public License     *
 *   along with this program; if not, write to the                         *
 *   Free Software Foundation, Inc.,                                       *
 *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
 ***************************************************************************/

#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <pthread.h>
#include <sys/types.h>
#include <fstream>

#include "jthread.h"
#include "jrefcounted.h"
#include "jfilesystem.h"
#include "matrix.h"
#include "matrixoperations.h"
#include "maximawrapper.h"
#include "transform.h"
#include "codegenerator.h"
#include "jfilesystem.h"

#ifdef HAVE_CONFIG_H
#  include "config.h"
#endif

using namespace hecura;

TransformListPtr parsePbFile(const char* filename);

int main( int argc, const char ** argv){
  if(argc != 2){
    fprintf(stderr, PACKAGE " PetaBricks compiler (pbc) v" VERSION "\n");
    fprintf(stderr, "USAGE: %s filename.pbcc\n", argv[0]);
    return 1;
  }
  std::string input = argv[1];
  std::string output = jalib::Filesystem::Basename(input) + ".cpp";

  TransformListPtr t = parsePbFile(input.c_str());

  std::ofstream of(output.c_str());
  CodeGenerator o(of);

  o.comment("Generated by " PACKAGE " PetaBricks compiler (pbc) v" VERSION);
  o.write("#include \""+jalib::Filesystem::FindHelperUtility("matrix.h")+"\"");
  o.write("#include \""+jalib::Filesystem::FindHelperUtility("matrixio.h")+"\"");
  #ifdef SHORT_TYPE_NAMES
  o.write("using namespace hecura;");
  #endif
  o.newline();

  for(TransformList::iterator i=t->begin(); i!=t->end(); ++i){
    JTRACE("generating")(input)(output)((*i)->name());
    (*i)->initialize();
    #ifdef DEBUG
    (*i)->print(std::cout);
    #endif
    (*i)->generateCodeSimple(o);
  }
  JTRACE("done")(input)(output);
  return 0;
}
