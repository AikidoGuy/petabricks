
#include "add.pbcc"

transform MatrixMultiply
from A[c,h], B[w,c] 
to AB[w,h]
{
  //recursively chop the matrix in half
  recursive(c) 
  to(AB ab)
  from( A.region(0,   0, c/2, h  ) a1,
        A.region(c/2, 0, c,   h  ) a2,
        B.region(0,   0, w,   c/2) b1,
        B.region(0, c/2, w,   c  ) b2)
  {
    DynamicTaskPtr t1 = spawn_MatrixMultiply(ab,  a1, b1);
    t1->enqueue();
    
    MatrixRegion2D tmp = MatrixRegion2D::allocate(w,h);
    DynamicTaskPtr t2 = spawn_MatrixMultiply(tmp, a2, b2);
    t2->enqueue();
    
    DynamicTaskPtr t3 = spawn_MatrixAdd(ab, ab, tmp);
    t3->dependsOn(t1);
    t3->dependsOn(t2);
    t3->enqueue();
    t3->waitUntilComplete();
  }
  
  //compute a cell the straightforward way
  AB.cell(x,y) from(A.row(y) a, B.column(x) b){
    ElementT sum=0;
    for(IndexT i=0; i<a.width(); ++i)
      sum+=a.cell(i)*b.cell(i);
    return sum;
  }
}

