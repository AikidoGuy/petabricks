#ifndef ASSIGNCLUSTERS_PBCC
#define ASSIGNCLUSTERS_PBCC

//#ifndef
//#define k 3
//#endif

#include "distance.pbcc"

transform AssignClusters
param k   //input parameter: number of clusters
from X[n,2], C[k,2], A[n]
through D[n,k], ctemp[n]
to Anew[n], cflag
{

	to (D.cell(i,j) d) from (X.column(i) x, C.column(j) c)
	{
		Distance(d,x,c);
	}


	to (Anew.cell(i) anew, ctemp.cell(i) change)  from(D.column(i) d, A.cell(i) a)
	{
		int j;
		ElementT minindex, mindist;
		minindex=0;
		mindist=d.cell(0);
		for (j=1; j<k; j++) {
			if (d.cell(j) < mindist) {
				minindex=j;
				mindist = d.cell(j);
			}
		}
		if (minindex == a ){
			anew=a;
			change=0;
		}
		else {
			anew=minindex;
			change=1;
		}
	}

	cflag from (ctemp c) {
		int i;
		ElementT sum=0;
		for (i=0; i<n; i++) {
			sum+=c.cell(i);
		}
		return sum;
	}

}

#endif // ASSIGNCLUSTERS_PBCC
