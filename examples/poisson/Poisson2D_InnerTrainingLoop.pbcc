      // compute number of iterations of recursive precision LOCALPREC
      TRAINPRINTF("    Training prec%d for precision %d:\n", LOCALPREC, CURPREC);
      CAT(CAT(CAT(prec, LOCALPREC), Iters_Prec), CURPREC)[level].setValue(0);
      if (level > 1) {
        Copy2D(y, x);
        oldError = error;

        // compute one recursive iteration
//        t = SOR2D(y, b, -2, 1);
//        r = Restrict2Dnew(Residual2D(t,b));
//        r = CAT(Poisson2D_Inner_Prec, LOCALPREC)(z,r);
//        t = MatrixAdd(Interpolate2Dnew(r), t);
//        SOR2D(y, t, b, -2, 1);

        SOR2D(t1, y, b, -2, 1);   // t1 gets relaxed guess
        Residual2D(t2, t1, b);    // t2 gets new residual
        Restrict2Dnew(r1, t2);    // r1 gets restricted residual
        CAT(Poisson2D_Inner_Prec, LOCALPREC)(r2, z, r1); // r2 gets coarse update
        Interpolate2Dnew(t2, r2); // t2 gets interpolated update
        MatrixAdd(t2, t2, t1);    // t2 gets updated guess
        SOR2D(y, t2, b, -2, 1);   //  y gets relaxed guess

        CAT(CAT(CAT(prec, LOCALPREC), Iters_Prec), CURPREC)[level].setValue(CAT(CAT(CAT(prec, LOCALPREC), Iters_Prec), CURPREC)[level] + 1);
        ComputeError(newError, y, actual);
        change = newError / oldError;
        oldError = newError;
        TRAINPRINTF("      error = %g, ratio = %g\n", newError, newError / error);

        if (change >= 1) {
          // cannot achieve target precision, so this is an invalid selection
          // signal to timing run that it should abort
          CAT(CAT(CAT(prec, LOCALPREC), Iters_Prec), CURPREC)[level].setValue(-1);
        } else {
          while (newError / error > CAT(POISSON_PRECISION_, CURPREC) && change < 1){
            // compute one recursive iteration
            //        t = SOR2D(y, b, -2, 1);
            //        r = Restrict2Dnew(Residual2D(t,b));
            //        r = CAT(Poisson2D_Inner_Prec, LOCALPREC)(z,r);
            //        t = MatrixAdd(Interpolate2Dnew(r), t);
            //        SOR2D(y, t, b, -2, 1);

            SOR2D(t1, y, b, -2, 1);   // t1 gets relaxed guess
            Residual2D(t2, t1, b);    // t2 gets new residual
            Restrict2Dnew(r1, t2);    // r1 gets restricted residual
            CAT(Poisson2D_Inner_Prec, LOCALPREC)(r2, z, r1); // r2 gets coarse update
            Interpolate2Dnew(t2, r2); // t2 gets interpolated update
            MatrixAdd(t2, t2, t1);    // t2 gets updated guess
            SOR2D(y, t2, b, -2, 1);   //  y gets relaxed guess

            CAT(CAT(CAT(prec, LOCALPREC), Iters_Prec), CURPREC)[level].setValue(CAT(CAT(CAT(prec, LOCALPREC), Iters_Prec), CURPREC)[level] + 1);
            ComputeError(newError, y, actual);
            change = newError / oldError;
            oldError = newError;
            TRAINPRINTF("      error = %g, ratio = %g\n", newError, newError / error);
            if (change >= 1) {
              // cannot achieve target precision, so this is an invalid selection
              // signal to timing run that it should abort
              CAT(CAT(CAT(prec, LOCALPREC), Iters_Prec), CURPREC)[level].setValue(-1);
              break;
            }
          }
        }
        TRAINPRINTF("      Setting number of iterations of prec%dIters_Prec%d to %d\n", LOCALPREC, CURPREC, (int) CAT(CAT(CAT(prec, LOCALPREC), Iters_Prec), CURPREC)[level]);
      }
