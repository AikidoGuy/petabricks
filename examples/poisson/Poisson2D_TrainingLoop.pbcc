      printf("  Poisson Training precision %d\n", CURPREC);

      // compute iterations of SOR
      printf("    Training SOR for precision %d:\n", CURPREC);
      CAT(SORIters_Prec, CURPREC)[level].setValue(0);
      Copy2D(y, x);
      oldError = error;

      do {

        if (level > 6) {
          // at higher levels, this takes too long, so just skip it
          // signal to timing run that it should abort
          CAT(SORIters_Prec, CURPREC)[level].setValue(-1);
          break;
        }
        
        SOR2D(y, y, b, -1, 1);

        CAT(SORIters_Prec, CURPREC)[level].setValue(CAT(SORIters_Prec, CURPREC)[level] + 1);
        newError = ComputeError(y, actual);
        change = newError / oldError;
        oldError = newError;
        printf("      error = %g, ratio = %g\n", newError, newError / error);
        if (change >= 1) {
          // cannot achieve target precision, so this is an invalid selection
          // signal to timing run that it should abort
          CAT(SORIters_Prec, CURPREC)[level].setValue(-1);
          break;
        }

      } while (newError / error > CAT(POISSON_PRECISION_, CURPREC) && change < 1);
      printf("      Setting number of iterations of SORIters_Prec%d to %d\n", CURPREC, (int) CAT(SORIters_Prec, CURPREC)[level]);

#define LOCALPREC 1
#include "Poisson2D_InnerTrainingLoop.pbcc"
#undef LOCALPREC
#define LOCALPREC 2
#include "Poisson2D_InnerTrainingLoop.pbcc"
#undef LOCALPREC
#define LOCALPREC 3
#include "Poisson2D_InnerTrainingLoop.pbcc"
#undef LOCALPREC
#define LOCALPREC 4
#include "Poisson2D_InnerTrainingLoop.pbcc"
#undef LOCALPREC
#define LOCALPREC 5
#include "Poisson2D_InnerTrainingLoop.pbcc"
#undef LOCALPREC

