  // precision LOCALPREC
  recursive(n / 2)
  to (Y y) from(X x, B b, zeros z) {
    if (n == 3) {
      printf("prec%d recursive base case called for level 1\n", LOCALPREC);
      Copy2D(y, x);
      y.cell(1, 1) = (x.cell(1, 0) + x.cell(0, 1) + x.cell(1, 2) + x.cell(2, 1) + b.cell(1, 1)) / 4;
    } else {
      int i, level = (int) log2(n-1);
      printf("prec%d recursive case called for level %d (%d iterations)\n", LOCALPREC, level, (int) CAT(CAT(CAT(prec, LOCALPREC), Iters_Prec), CURPREC)[level]);
      MatrixRegion2D t, r;

      for (i = 0; i < CAT(CAT(CAT(prec, LOCALPREC), Iters_Prec), CURPREC)[level]; i++) {
        t = SOR2D(x, b, -2, 1);
        r = Restrict2Dnew(Residual2D(t,b));
        r = CAT(Poisson2D_Inner_Prec, LOCALPREC)(z,r);
        t = MatrixAdd(Interpolate2Dnew(r), t);
        SOR2D(y, t, b, -2, 1);
      }
    }
  }

