#ifndef FMGV2DGRAPH_PBCC
#define FMGV2DGRAPH_PBCC

#include "fmgv2D.pbcc"

%{

JTUNABLE(_prec_case, 9);

%}

#define MAX_LEVEL 13

transform fmgv2DGraph
from IN[n,n], B[n,n]
to OUT[n,n]
{
  recursive
  to (OUT o) from (IN in, B b)
  {

    int *iters;
    int prec_case = (int) _prec_case;

    //                            0  1  2  3  4  5  6  7  8  9 10 11 12 13
    int iters1 [MAX_LEVEL + 1] = {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1};
    int iters3 [MAX_LEVEL + 1] = {1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1};
    int iters5 [MAX_LEVEL + 1] = {1, 1, 3, 3, 3, 3, 2, 2, 2, 1, 1, 1, 1, 1};
    int iters7 [MAX_LEVEL + 1] = {1, 1, 5, 5, 5, 4, 4, 3, 3, 3, 2, 2, 1, 1};
    int iters9 [MAX_LEVEL + 1] = {1, 1, 6, 6, 6, 6, 5, 5, 4, 4, 4, 3, 3, 2};

    switch (prec_case) {
      case 1:  iters = iters1;  break;
      case 3:  iters = iters3;  break;
      case 5:  iters = iters5;  break;
      case 7:  iters = iters7;  break;
      case 9:  iters = iters9;  break;
      default: printf("error\n"); exit(-1);
    }
        
//    printf("Using %d iterations\n", iters[(int) log2(n - 1)]);
    SPAWN(fmgv2D, o, in, b, iters[(int) log2(n - 1)]);
  }
}

#endif // FMGV2DGRAPH_PBCC

