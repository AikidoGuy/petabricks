      // compute number of iterations of recursive precision LOCALPREC
//      printf("    Training prec%d for precision %d:\n", LOCALPREC, CURPREC);
      CAT(CAT(CAT(CAT(CAT(full_prec, LOCALPREC), Iters_Est), ESTPREC), _Prec), CURPREC)[level].setValue(0);
      if (level > 1) {
        Copy2D(y, est);
        oldError = error;
        do {

          // compute one recursive iteration
          t = SOR2D(y, b, -2, 1);
          r = Restrict2Dnew(Residual2D(t,b));
          r = CAT(Poisson2D_Inner_Prec, LOCALPREC)(z,r);
          t = MatrixAdd(Interpolate2Dnew(r), t);
          SOR2D(y, t, b, -2, 1);

          CAT(CAT(CAT(CAT(CAT(full_prec, LOCALPREC), Iters_Est), ESTPREC), _Prec), CURPREC)[level].setValue(CAT(CAT(CAT(CAT(CAT(full_prec, LOCALPREC), Iters_Est), ESTPREC), _Prec), CURPREC)[level] + 1);
          newError = ComputeError(y, actual);
          change = newError / oldError;
          oldError = newError;
          printf("      error = %g, ratio = %g\n", newError, newError / error);
          if (change >= 1) {
            // cannot achieve target precision, so this is an invalid selection
            // signal to timing run that it should abort
            CAT(CAT(CAT(CAT(CAT(full_prec, LOCALPREC), Iters_Est), ESTPREC), _Prec), CURPREC)[level].setValue(-1);
            break;
          }

        } while (newError / error > CAT(FULL_POISSON_PRECISION_, CURPREC) && change < 1);

//	printf("Setting full_prec%dIters_Est%d_Prec%d to %d\n", LOCALPREC, ESTPREC, CURPREC, (int) CAT(CAT(CAT(CAT(CAT(full_prec, LOCALPREC), Iters_Est), ESTPREC), _Prec), CURPREC)[level]);
      }

