#ifndef HELMHOLTZ3DFORWARDFUNC_PBCC
#define HELMHOLTZ3DFORWARDFUNC_PBCC

transform Helmholtz3DForwardFunc
from IN[n,n,n], A[n,n,n], B0[n+1,n,n], B1[n,n+1,n], B2[n,n,n+1],
     ALPHA, BETA, DX
to OUT[n,n,n]
{

#define OTHER_ARGS , A.cell(i  ,j  ,k  ) a, \
                    B0.cell(i  ,j  ,k  ) bwe, \
                    B0.cell(i+1,j  ,k  ) bea, \
                    B1.cell(i  ,j  ,k  ) bno, \
                    B1.cell(i  ,j+1,k  ) bso, \
                    B2.cell(i  ,j  ,k  ) bfr, \
                    B2.cell(i  ,j  ,k+1) bba, \
                    ALPHA alpha, BETA beta, DX dx
#define BODY \
    double dxSq = dx * dx; \
    double K = alpha * a + beta / dxSq * (bwe + bea + bno + bso + bfr + bba); \
    return K * me - (beta / dxSq * (bwe * we + bea * ea + bno * no + \
                                    bso * so + bfr * fr + bba * ba));

#include "CubeRulesTemplate.pbcc"

#undef BODY
#undef OTHER_ARGS

}

#endif // HELMHOLTZ3DFORWARDFUNC_PBCC
